// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/syllabix/rollpay/backend/api/model"
)

// PostV1UserCreatedCode is the HTTP code returned for type PostV1UserCreated
const PostV1UserCreatedCode int = 201

/*PostV1UserCreated a newly created user

swagger:response postV1UserCreated
*/
type PostV1UserCreated struct {

	/*
	  In: Body
	*/
	Payload *model.User `json:"body,omitempty"`
}

// NewPostV1UserCreated creates PostV1UserCreated with default headers values
func NewPostV1UserCreated() *PostV1UserCreated {

	return &PostV1UserCreated{}
}

// WithPayload adds the payload to the post v1 user created response
func (o *PostV1UserCreated) WithPayload(payload *model.User) *PostV1UserCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post v1 user created response
func (o *PostV1UserCreated) SetPayload(payload *model.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostV1UserCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostV1UserBadRequestCode is the HTTP code returned for type PostV1UserBadRequest
const PostV1UserBadRequestCode int = 400

/*PostV1UserBadRequest The provided request was invalid.

swagger:response postV1UserBadRequest
*/
type PostV1UserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *model.StandardError `json:"body,omitempty"`
}

// NewPostV1UserBadRequest creates PostV1UserBadRequest with default headers values
func NewPostV1UserBadRequest() *PostV1UserBadRequest {

	return &PostV1UserBadRequest{}
}

// WithPayload adds the payload to the post v1 user bad request response
func (o *PostV1UserBadRequest) WithPayload(payload *model.StandardError) *PostV1UserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post v1 user bad request response
func (o *PostV1UserBadRequest) SetPayload(payload *model.StandardError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostV1UserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostV1UserConflictCode is the HTTP code returned for type PostV1UserConflict
const PostV1UserConflictCode int = 409

/*PostV1UserConflict A conflict with an existing resource or process occured.

swagger:response postV1UserConflict
*/
type PostV1UserConflict struct {

	/*
	  In: Body
	*/
	Payload *model.StandardError `json:"body,omitempty"`
}

// NewPostV1UserConflict creates PostV1UserConflict with default headers values
func NewPostV1UserConflict() *PostV1UserConflict {

	return &PostV1UserConflict{}
}

// WithPayload adds the payload to the post v1 user conflict response
func (o *PostV1UserConflict) WithPayload(payload *model.StandardError) *PostV1UserConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post v1 user conflict response
func (o *PostV1UserConflict) SetPayload(payload *model.StandardError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostV1UserConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostV1UserInternalServerErrorCode is the HTTP code returned for type PostV1UserInternalServerError
const PostV1UserInternalServerErrorCode int = 500

/*PostV1UserInternalServerError An unexpected system or network error occured.

swagger:response postV1UserInternalServerError
*/
type PostV1UserInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *model.StandardError `json:"body,omitempty"`
}

// NewPostV1UserInternalServerError creates PostV1UserInternalServerError with default headers values
func NewPostV1UserInternalServerError() *PostV1UserInternalServerError {

	return &PostV1UserInternalServerError{}
}

// WithPayload adds the payload to the post v1 user internal server error response
func (o *PostV1UserInternalServerError) WithPayload(payload *model.StandardError) *PostV1UserInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post v1 user internal server error response
func (o *PostV1UserInternalServerError) SetPayload(payload *model.StandardError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostV1UserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
