// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/syllabix/rollpay/backend/api/model"
)

// PutV1UserIDOKCode is the HTTP code returned for type PutV1UserIDOK
const PutV1UserIDOKCode int = 200

/*PutV1UserIDOK a successfully updated user

swagger:response putV1UserIdOK
*/
type PutV1UserIDOK struct {

	/*
	  In: Body
	*/
	Payload *model.User `json:"body,omitempty"`
}

// NewPutV1UserIDOK creates PutV1UserIDOK with default headers values
func NewPutV1UserIDOK() *PutV1UserIDOK {

	return &PutV1UserIDOK{}
}

// WithPayload adds the payload to the put v1 user Id o k response
func (o *PutV1UserIDOK) WithPayload(payload *model.User) *PutV1UserIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put v1 user Id o k response
func (o *PutV1UserIDOK) SetPayload(payload *model.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutV1UserIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutV1UserIDBadRequestCode is the HTTP code returned for type PutV1UserIDBadRequest
const PutV1UserIDBadRequestCode int = 400

/*PutV1UserIDBadRequest The provided request was invalid.

swagger:response putV1UserIdBadRequest
*/
type PutV1UserIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *model.StandardError `json:"body,omitempty"`
}

// NewPutV1UserIDBadRequest creates PutV1UserIDBadRequest with default headers values
func NewPutV1UserIDBadRequest() *PutV1UserIDBadRequest {

	return &PutV1UserIDBadRequest{}
}

// WithPayload adds the payload to the put v1 user Id bad request response
func (o *PutV1UserIDBadRequest) WithPayload(payload *model.StandardError) *PutV1UserIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put v1 user Id bad request response
func (o *PutV1UserIDBadRequest) SetPayload(payload *model.StandardError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutV1UserIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutV1UserIDNotFoundCode is the HTTP code returned for type PutV1UserIDNotFound
const PutV1UserIDNotFoundCode int = 404

/*PutV1UserIDNotFound The resource requested does not exist.

swagger:response putV1UserIdNotFound
*/
type PutV1UserIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *model.StandardError `json:"body,omitempty"`
}

// NewPutV1UserIDNotFound creates PutV1UserIDNotFound with default headers values
func NewPutV1UserIDNotFound() *PutV1UserIDNotFound {

	return &PutV1UserIDNotFound{}
}

// WithPayload adds the payload to the put v1 user Id not found response
func (o *PutV1UserIDNotFound) WithPayload(payload *model.StandardError) *PutV1UserIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put v1 user Id not found response
func (o *PutV1UserIDNotFound) SetPayload(payload *model.StandardError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutV1UserIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutV1UserIDInternalServerErrorCode is the HTTP code returned for type PutV1UserIDInternalServerError
const PutV1UserIDInternalServerErrorCode int = 500

/*PutV1UserIDInternalServerError An unexpected system or network error occured.

swagger:response putV1UserIdInternalServerError
*/
type PutV1UserIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *model.StandardError `json:"body,omitempty"`
}

// NewPutV1UserIDInternalServerError creates PutV1UserIDInternalServerError with default headers values
func NewPutV1UserIDInternalServerError() *PutV1UserIDInternalServerError {

	return &PutV1UserIDInternalServerError{}
}

// WithPayload adds the payload to the put v1 user Id internal server error response
func (o *PutV1UserIDInternalServerError) WithPayload(payload *model.StandardError) *PutV1UserIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put v1 user Id internal server error response
func (o *PutV1UserIDInternalServerError) SetPayload(payload *model.StandardError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutV1UserIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
