// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/syllabix/rollpay/backend/api/model"
)

// GetV1UserIDOKCode is the HTTP code returned for type GetV1UserIDOK
const GetV1UserIDOKCode int = 200

/*GetV1UserIDOK a

swagger:response getV1UserIdOK
*/
type GetV1UserIDOK struct {

	/*
	  In: Body
	*/
	Payload *model.User `json:"body,omitempty"`
}

// NewGetV1UserIDOK creates GetV1UserIDOK with default headers values
func NewGetV1UserIDOK() *GetV1UserIDOK {

	return &GetV1UserIDOK{}
}

// WithPayload adds the payload to the get v1 user Id o k response
func (o *GetV1UserIDOK) WithPayload(payload *model.User) *GetV1UserIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 user Id o k response
func (o *GetV1UserIDOK) SetPayload(payload *model.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1UserIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetV1UserIDBadRequestCode is the HTTP code returned for type GetV1UserIDBadRequest
const GetV1UserIDBadRequestCode int = 400

/*GetV1UserIDBadRequest The provided request was invalid.

swagger:response getV1UserIdBadRequest
*/
type GetV1UserIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *model.StandardError `json:"body,omitempty"`
}

// NewGetV1UserIDBadRequest creates GetV1UserIDBadRequest with default headers values
func NewGetV1UserIDBadRequest() *GetV1UserIDBadRequest {

	return &GetV1UserIDBadRequest{}
}

// WithPayload adds the payload to the get v1 user Id bad request response
func (o *GetV1UserIDBadRequest) WithPayload(payload *model.StandardError) *GetV1UserIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 user Id bad request response
func (o *GetV1UserIDBadRequest) SetPayload(payload *model.StandardError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1UserIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetV1UserIDNotFoundCode is the HTTP code returned for type GetV1UserIDNotFound
const GetV1UserIDNotFoundCode int = 404

/*GetV1UserIDNotFound The resource requested does not exist.

swagger:response getV1UserIdNotFound
*/
type GetV1UserIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *model.StandardError `json:"body,omitempty"`
}

// NewGetV1UserIDNotFound creates GetV1UserIDNotFound with default headers values
func NewGetV1UserIDNotFound() *GetV1UserIDNotFound {

	return &GetV1UserIDNotFound{}
}

// WithPayload adds the payload to the get v1 user Id not found response
func (o *GetV1UserIDNotFound) WithPayload(payload *model.StandardError) *GetV1UserIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 user Id not found response
func (o *GetV1UserIDNotFound) SetPayload(payload *model.StandardError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1UserIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetV1UserIDInternalServerErrorCode is the HTTP code returned for type GetV1UserIDInternalServerError
const GetV1UserIDInternalServerErrorCode int = 500

/*GetV1UserIDInternalServerError An unexpected system or network error occured.

swagger:response getV1UserIdInternalServerError
*/
type GetV1UserIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *model.StandardError `json:"body,omitempty"`
}

// NewGetV1UserIDInternalServerError creates GetV1UserIDInternalServerError with default headers values
func NewGetV1UserIDInternalServerError() *GetV1UserIDInternalServerError {

	return &GetV1UserIDInternalServerError{}
}

// WithPayload adds the payload to the get v1 user Id internal server error response
func (o *GetV1UserIDInternalServerError) WithPayload(payload *model.StandardError) *GetV1UserIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 user Id internal server error response
func (o *GetV1UserIDInternalServerError) SetPayload(payload *model.StandardError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1UserIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
