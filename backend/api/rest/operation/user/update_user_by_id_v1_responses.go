// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/syllabix/rollpay/backend/api/model"
)

// UpdateUserByIDV1OKCode is the HTTP code returned for type UpdateUserByIDV1OK
const UpdateUserByIDV1OKCode int = 200

/*UpdateUserByIDV1OK a successfully updated user

swagger:response updateUserByIdV1OK
*/
type UpdateUserByIDV1OK struct {

	/*
	  In: Body
	*/
	Payload *model.User `json:"body,omitempty"`
}

// NewUpdateUserByIDV1OK creates UpdateUserByIDV1OK with default headers values
func NewUpdateUserByIDV1OK() *UpdateUserByIDV1OK {

	return &UpdateUserByIDV1OK{}
}

// WithPayload adds the payload to the update user by Id v1 o k response
func (o *UpdateUserByIDV1OK) WithPayload(payload *model.User) *UpdateUserByIDV1OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update user by Id v1 o k response
func (o *UpdateUserByIDV1OK) SetPayload(payload *model.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserByIDV1OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateUserByIDV1BadRequestCode is the HTTP code returned for type UpdateUserByIDV1BadRequest
const UpdateUserByIDV1BadRequestCode int = 400

/*UpdateUserByIDV1BadRequest The provided request was invalid.

swagger:response updateUserByIdV1BadRequest
*/
type UpdateUserByIDV1BadRequest struct {

	/*
	  In: Body
	*/
	Payload *model.StandardError `json:"body,omitempty"`
}

// NewUpdateUserByIDV1BadRequest creates UpdateUserByIDV1BadRequest with default headers values
func NewUpdateUserByIDV1BadRequest() *UpdateUserByIDV1BadRequest {

	return &UpdateUserByIDV1BadRequest{}
}

// WithPayload adds the payload to the update user by Id v1 bad request response
func (o *UpdateUserByIDV1BadRequest) WithPayload(payload *model.StandardError) *UpdateUserByIDV1BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update user by Id v1 bad request response
func (o *UpdateUserByIDV1BadRequest) SetPayload(payload *model.StandardError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserByIDV1BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateUserByIDV1NotFoundCode is the HTTP code returned for type UpdateUserByIDV1NotFound
const UpdateUserByIDV1NotFoundCode int = 404

/*UpdateUserByIDV1NotFound The resource requested does not exist.

swagger:response updateUserByIdV1NotFound
*/
type UpdateUserByIDV1NotFound struct {

	/*
	  In: Body
	*/
	Payload *model.StandardError `json:"body,omitempty"`
}

// NewUpdateUserByIDV1NotFound creates UpdateUserByIDV1NotFound with default headers values
func NewUpdateUserByIDV1NotFound() *UpdateUserByIDV1NotFound {

	return &UpdateUserByIDV1NotFound{}
}

// WithPayload adds the payload to the update user by Id v1 not found response
func (o *UpdateUserByIDV1NotFound) WithPayload(payload *model.StandardError) *UpdateUserByIDV1NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update user by Id v1 not found response
func (o *UpdateUserByIDV1NotFound) SetPayload(payload *model.StandardError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserByIDV1NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateUserByIDV1ConflictCode is the HTTP code returned for type UpdateUserByIDV1Conflict
const UpdateUserByIDV1ConflictCode int = 409

/*UpdateUserByIDV1Conflict A conflict with an existing resource or process occured.

swagger:response updateUserByIdV1Conflict
*/
type UpdateUserByIDV1Conflict struct {

	/*
	  In: Body
	*/
	Payload *model.StandardError `json:"body,omitempty"`
}

// NewUpdateUserByIDV1Conflict creates UpdateUserByIDV1Conflict with default headers values
func NewUpdateUserByIDV1Conflict() *UpdateUserByIDV1Conflict {

	return &UpdateUserByIDV1Conflict{}
}

// WithPayload adds the payload to the update user by Id v1 conflict response
func (o *UpdateUserByIDV1Conflict) WithPayload(payload *model.StandardError) *UpdateUserByIDV1Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update user by Id v1 conflict response
func (o *UpdateUserByIDV1Conflict) SetPayload(payload *model.StandardError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserByIDV1Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateUserByIDV1InternalServerErrorCode is the HTTP code returned for type UpdateUserByIDV1InternalServerError
const UpdateUserByIDV1InternalServerErrorCode int = 500

/*UpdateUserByIDV1InternalServerError An unexpected system or network error occured.

swagger:response updateUserByIdV1InternalServerError
*/
type UpdateUserByIDV1InternalServerError struct {

	/*
	  In: Body
	*/
	Payload *model.StandardError `json:"body,omitempty"`
}

// NewUpdateUserByIDV1InternalServerError creates UpdateUserByIDV1InternalServerError with default headers values
func NewUpdateUserByIDV1InternalServerError() *UpdateUserByIDV1InternalServerError {

	return &UpdateUserByIDV1InternalServerError{}
}

// WithPayload adds the payload to the update user by Id v1 internal server error response
func (o *UpdateUserByIDV1InternalServerError) WithPayload(payload *model.StandardError) *UpdateUserByIDV1InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update user by Id v1 internal server error response
func (o *UpdateUserByIDV1InternalServerError) SetPayload(payload *model.StandardError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateUserByIDV1InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
