// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/syllabix/rollpay/backend/api/model"
)

// AddOrgMembersV1OKCode is the HTTP code returned for type AddOrgMembersV1OK
const AddOrgMembersV1OKCode int = 200

/*AddOrgMembersV1OK a successfully added member

swagger:response addOrgMembersV1OK
*/
type AddOrgMembersV1OK struct {

	/*
	  In: Body
	*/
	Payload *model.OrganizationMember `json:"body,omitempty"`
}

// NewAddOrgMembersV1OK creates AddOrgMembersV1OK with default headers values
func NewAddOrgMembersV1OK() *AddOrgMembersV1OK {

	return &AddOrgMembersV1OK{}
}

// WithPayload adds the payload to the add org members v1 o k response
func (o *AddOrgMembersV1OK) WithPayload(payload *model.OrganizationMember) *AddOrgMembersV1OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add org members v1 o k response
func (o *AddOrgMembersV1OK) SetPayload(payload *model.OrganizationMember) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddOrgMembersV1OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddOrgMembersV1BadRequestCode is the HTTP code returned for type AddOrgMembersV1BadRequest
const AddOrgMembersV1BadRequestCode int = 400

/*AddOrgMembersV1BadRequest The provided request was invalid.

swagger:response addOrgMembersV1BadRequest
*/
type AddOrgMembersV1BadRequest struct {

	/*
	  In: Body
	*/
	Payload *model.StandardError `json:"body,omitempty"`
}

// NewAddOrgMembersV1BadRequest creates AddOrgMembersV1BadRequest with default headers values
func NewAddOrgMembersV1BadRequest() *AddOrgMembersV1BadRequest {

	return &AddOrgMembersV1BadRequest{}
}

// WithPayload adds the payload to the add org members v1 bad request response
func (o *AddOrgMembersV1BadRequest) WithPayload(payload *model.StandardError) *AddOrgMembersV1BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add org members v1 bad request response
func (o *AddOrgMembersV1BadRequest) SetPayload(payload *model.StandardError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddOrgMembersV1BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddOrgMembersV1NotFoundCode is the HTTP code returned for type AddOrgMembersV1NotFound
const AddOrgMembersV1NotFoundCode int = 404

/*AddOrgMembersV1NotFound The resource requested does not exist.

swagger:response addOrgMembersV1NotFound
*/
type AddOrgMembersV1NotFound struct {

	/*
	  In: Body
	*/
	Payload *model.StandardError `json:"body,omitempty"`
}

// NewAddOrgMembersV1NotFound creates AddOrgMembersV1NotFound with default headers values
func NewAddOrgMembersV1NotFound() *AddOrgMembersV1NotFound {

	return &AddOrgMembersV1NotFound{}
}

// WithPayload adds the payload to the add org members v1 not found response
func (o *AddOrgMembersV1NotFound) WithPayload(payload *model.StandardError) *AddOrgMembersV1NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add org members v1 not found response
func (o *AddOrgMembersV1NotFound) SetPayload(payload *model.StandardError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddOrgMembersV1NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddOrgMembersV1ConflictCode is the HTTP code returned for type AddOrgMembersV1Conflict
const AddOrgMembersV1ConflictCode int = 409

/*AddOrgMembersV1Conflict A conflict with an existing resource or process occured.

swagger:response addOrgMembersV1Conflict
*/
type AddOrgMembersV1Conflict struct {

	/*
	  In: Body
	*/
	Payload *model.StandardError `json:"body,omitempty"`
}

// NewAddOrgMembersV1Conflict creates AddOrgMembersV1Conflict with default headers values
func NewAddOrgMembersV1Conflict() *AddOrgMembersV1Conflict {

	return &AddOrgMembersV1Conflict{}
}

// WithPayload adds the payload to the add org members v1 conflict response
func (o *AddOrgMembersV1Conflict) WithPayload(payload *model.StandardError) *AddOrgMembersV1Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add org members v1 conflict response
func (o *AddOrgMembersV1Conflict) SetPayload(payload *model.StandardError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddOrgMembersV1Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddOrgMembersV1InternalServerErrorCode is the HTTP code returned for type AddOrgMembersV1InternalServerError
const AddOrgMembersV1InternalServerErrorCode int = 500

/*AddOrgMembersV1InternalServerError An unexpected system or network error occured.

swagger:response addOrgMembersV1InternalServerError
*/
type AddOrgMembersV1InternalServerError struct {

	/*
	  In: Body
	*/
	Payload *model.StandardError `json:"body,omitempty"`
}

// NewAddOrgMembersV1InternalServerError creates AddOrgMembersV1InternalServerError with default headers values
func NewAddOrgMembersV1InternalServerError() *AddOrgMembersV1InternalServerError {

	return &AddOrgMembersV1InternalServerError{}
}

// WithPayload adds the payload to the add org members v1 internal server error response
func (o *AddOrgMembersV1InternalServerError) WithPayload(payload *model.StandardError) *AddOrgMembersV1InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add org members v1 internal server error response
func (o *AddOrgMembersV1InternalServerError) SetPayload(payload *model.StandardError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddOrgMembersV1InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
